[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "puffkit_example"
version = "0.3.0"
description = "An example PuffKit app, for debugging and showcase purposes."
authors = [
    {name = "Artur Borecki", email = "me@pufereq.pl"},
]
dependencies = ["puffkit @ file:///${PROJECT_ROOT}/puffkit"]
requires-python = ">=3.12"
readme = "README.md"
license = {text = "GPL-3.0+"}

[tool.pdm]
distribution = true

[tool.pdm.scripts]
puffkit-example = {call = "puffkit_example.__main__:main"}

[tool.pytest.ini_options]
addopts = [
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=100",
]

[tool.coverage.run]
omit = [
    "puffkit_example/__init__.py",
    "tests/*",
    "puffkit/*",
]

[tool.semantic_release]
version_variables = ["puffkit_example/__init__.py:__version__"]
version_toml = ["pyproject.toml:project.version"]
build_command_env = []
commit_message = "chore(release): {version}\n\nAutomatically generated by python-semantic-release"
commit_parser = "angular"
logging_use_named_masks = false
major_on_zero = true
allow_zero_version = true
no_git_verify = false
tag_format = "{version}"

[tool.semantic_release.commit_author]
env = "GIT_COMMIT_AUTHOR"
default = "semantic-release <semantic-release>"

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]
default_bump_level = 0

[dependency-groups]
test = [
    "pytest>=8.3.4",
    "pytest-cov>=6.0.0",
    "pytest-mock>=3.14.0",
    "pytest-github-actions-annotate-failures>=0.2.0",
]
bump = [
    "git-cliff>=2.7.0",
    "python-semantic-release>=9.15.1",
]
lint = [
    "black>=24.10.0",
    "isort>=5.13.2",
]
